name: CPU builds

on:
  # Allow this workflow to be called by the main workflow.
  workflow_call:
  push: # Run workflow on push to the develop branch.
    branches: 
      - develop
  workflow_dispatch: # Workflow can be run manually


jobs:
  get_docker_image_tag:
    # Everywhere in this workflow, we use the most recent ubuntu distribution available in Github Actions
    # to ensure maximum support of google cloud's sdk.
    runs-on: ubuntu-22.04
    outputs:
      DOCKER_IMAGE_TAG: ${{ steps.extract_docker_image_tag.outputs.DOCKER_IMAGE_TAG }}
    steps:      
    # The TPL tag is contained in the codespaces configuration to avoid duplications.
    - name: Checkout .devcontainer/devcontainer.json
      uses: actions/checkout@v4.1.7
      with:
        sparse-checkout: |
          .devcontainer/devcontainer.json
        sparse-checkout-cone-mode: false
        submodules: false
        lfs: false
        fetch-depth: 1
    - name: Extract docker image tag
      id: extract_docker_image_tag
      run: |
        echo "DOCKER_IMAGE_TAG=$(jq '.build.args.GEOS_TPL_TAG' -r .devcontainer/devcontainer.json)" >> "$GITHUB_OUTPUT"
  # Matrix containing all the CPU build.
  # Those are quite fast and can efficiently benefit from the `sccache' tool to make them even faster.
  cpu_builds:
    name: ${{ matrix.name }}
    needs: 
      - get_docker_image_tag
    strategy:
      # In-progress jobs will not be cancelled if there is a failure
      fail-fast : false
      matrix:
        include:
          - name: Ubuntu (20.04, gcc 9.4.0, open-mpi 4.0.3)
            CMAKE_BUILD_TYPE: Release
            DOCKER_REPOSITORY: geosx/ubuntu20.04-gcc9
            BUILD_SHARED_LIBS: ON

          - name: Ubuntu debug (20.04, gcc 10.5.0, open-mpi 4.0.3) - github codespaces
            CMAKE_BUILD_TYPE: Debug
            DOCKER_REPOSITORY: geosx/ubuntu20.04-gcc10
            BUILD_SHARED_LIBS: ON

          - name: Ubuntu (20.04, gcc 10.5.0, open-mpi 4.0.3) - github codespaces
            CMAKE_BUILD_TYPE: Release
            DOCKER_REPOSITORY: geosx/ubuntu20.04-gcc10
            BUILD_SHARED_LIBS: ON

          - name: Ubuntu (22.04, gcc 11.4.0, open-mpi 4.1.2)
            CMAKE_BUILD_TYPE: Release
            DOCKER_REPOSITORY: geosx/ubuntu22.04-gcc11
            ENABLE_HYPRE: ON
            ENABLE_TRILINOS: OFF
            GCP_BUCKET: geosx/ubuntu22.04-gcc11
            BUILD_SHARED_LIBS: ON

          - name: Ubuntu (22.04, gcc 12.3.0, open-mpi 4.1.2)
            CMAKE_BUILD_TYPE: Release
            DOCKER_REPOSITORY: geosx/ubuntu22.04-gcc12
            ENABLE_HYPRE: ON
            ENABLE_TRILINOS: OFF
            BUILD_SHARED_LIBS: ON

          - name: Ubuntu (22.04, clang 15.0.7, open-mpi 4.1.2)
            CMAKE_BUILD_TYPE: Release
            DOCKER_REPOSITORY: geosx/ubuntu22.04-clang15
            ENABLE_HYPRE: ON
            ENABLE_TRILINOS: OFF
            BUILD_SHARED_LIBS: ON

    uses: ./.github/workflows/build_and_test.yml
    with:
      BUILD_SHARED_LIBS: ${{ matrix.BUILD_SHARED_LIBS }}
      CMAKE_BUILD_TYPE: ${{ matrix.CMAKE_BUILD_TYPE }}
      DOCKER_IMAGE_TAG: ${{ needs.get_docker_image_tag.outputs.DOCKER_IMAGE_TAG }}
      DOCKER_REPOSITORY: ${{ matrix.DOCKER_REPOSITORY }}
      ENABLE_HYPRE: ${{ matrix.ENABLE_HYPRE }}
      ENABLE_TRILINOS: ${{ matrix.ENABLE_TRILINOS }}
      GCP_BUCKET: ${{ matrix.GCP_BUCKET }}
      RUNS_ON: ubuntu-22.04
    secrets: inherit
