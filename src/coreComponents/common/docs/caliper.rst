###############################################################################
Basic profiling with CALIPER
###############################################################################


    Caliper Timers
=================================

GEOSX is equipped with Caliper timers, `<https://github.com/LLNL/Caliper>`.
We integrate Caliper into GEOSX by marking source-code sections of interest such as compuational kernels or initialization steps.
Caliper is included in the GEOSX TPL library and is built by adding the following cmake configuration to a host-config file.

.. code-block:: sh

   option( ENABLE_CALIPER "Enables CALIPER" On )


In particular, the following macros may be used to annotate GEOSX.

* ``GEOSX_MARK_BEGIN(name)`` - Marks user defined code region. 

* ``GEOSX_MARK_END(name)`` - Marks end of user defined code region.

* ``GEOSX_CXX_MARK_LOOP_BEGIN(loop, loopName)`` - Marks the start of a loop. **Will not work with a lambda which captures by reference**

* ``GEOSX_CXX_MARK_LOOP_ITERATION`` - Marks a loop iteration.

*  ``GEOSX_CXX_MARK_LOOP_END(loop)`` - Marks end of a loop.

*  ``GEOSX_CXX_MARK_FUNCTION`` - Marks a function.

As an example of annotation, we consider the following example:
   
.. code-block:: sh

  void scatter() {
    GEOSX_CXX_MARK_FUNCTION; // Mark the function. Exports "function"="scatter"
    // ...
  }

  int main(int argc, const char* argv[]){

    GEOSX_CXX_MARK_FUNCTION;

    GEOSX_MARK_BEGIN("setup");
    //intialization step
    GEOSX_MARK_END("setup");

    GEOSX_CXX_MARK_LOOP_BEGIN(elemLoop, "elemLoop");
    for(int elem = 0; i < noElements; ++i){

       GEOSX_CXX_MARK_LOOP_ITERATION(elemLoop,i);
       //computation...

       scatter();
    }
    GEOSX_CXX_MARK_LOOP_END(elemLoop, "elemLoop");
    
    return 0;
  }

  Configuring  Caliper
=================================
  
Configuration for CALIPER is done by exporting environment variables, the simplest
way to get started is setting the following variables

* ``CALI_SERVICES_ENABLE=event:recorder:timestamp:trace``
* ``CALI_CONFIG_PROFILE=flat-function-profile``

We refer the reader to the full Caliper tutorial `<https://github.com/LLNL/Caliper>`, for further details.  

Post running the application a .cali file will be generated. Viewing the output is done using the cali-query
command: ``cali-query -t *.cali``. The location of cali-query will depend on where caliper is installed. To simplify usage,
we recommend defining an alias.

* ``alias cali-query=thirdPartyLibs/build-cori-intel-release/caliper/src/caliper-build/src/tools/cali-query/cali-query``

Below is the output generated by invoking cali-query. By default output is given in nano-seconds.
  
.. code-block:: sh

   time.duration time.timestamp time.offset function     annotation time.inclusive.duration loop     iteration#elemloop 
          550     1536782188         550 
          101     1536782188         651 main         
           36     1536782188         687 main         setup                           36 
           34     1536782188         721 main                                            
           48     1536782188         769 main                                            elemloop 
           47     1536782188         816 main                                            elemloop                  0 
           17     1536782188         833 main/scatter                                 17 elemloop                  0 
           12     1536782188         845 main                                         76 elemloop                  0 
           23     1536782188         868 main                                            elemloop                    
           33     1536782188         901 main                                            elemloop                  1 
            7     1536782188         908 main/scatter                                  7 elemloop                  1 
            7     1536782188         915 main                                         47 elemloop                  1 
            8     1536782188         923 main                                        202 elemloop                    
            9     1536782188         932 main                                        382                                     
