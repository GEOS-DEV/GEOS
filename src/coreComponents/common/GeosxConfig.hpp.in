/**
 * @file GeosxConfig.hpp
 *
 * GEOSX build configuration file.
 * Contains a CMake-generated list of macros that define a particular build configuration.
 */

#ifndef GEOSX_COMMON_CONFIG_HPP
#define GEOSX_COMMON_CONFIG_HPP

/// Enables floating point exceptions
#cmakedefine GEOSX_USE_FPE

/// Enables bounds check in LvArray classes (CMake option ARRAY_BOUNDS_CHECK)
#cmakedefine GEOSX_USE_ARRAY_BOUNDS_CHECK

/// Enables use of Caliper (CMake option ENABLE_CALIPER)
#cmakedefine GEOSX_USE_CALIPER

/// Enables use of Caliper (CMake option ENABLE_ADIAK)
#cmakedefine GEOSX_USE_ADIAK

/// Enables use of CHAI (CMake option ENABLE_CHAI)
#cmakedefine GEOSX_USE_CHAI

/// Enables use of Mathpresso library (CMake option ENABLE_MATHPRESSO)
#cmakedefine GEOSX_USE_MATHPRESSO

/// Enables use of MPI (CMake option ENABLE_MPI)
#cmakedefine GEOSX_USE_MPI

/// Enables use of OpenMP (CMake option ENABLE_OPENMP)
#cmakedefine GEOSX_USE_OPENMP

/// Enables use of CUDA (CMake option ENABLE_CUDA)
#cmakedefine GEOSX_USE_CUDA


/// Enables use of CUDA NVToolsExt (CMake option ENABLE_CUDA_NVTOOLSEXT)
#cmakedefine GEOSX_USE_CUDA_NVTOOLSEXT

/// Enables use of HIP (CMake option ENABLE_HIP)
#cmakedefine GEOSX_USE_HIP

/// Enables use of PVTPackage (CMake option ENABLE_PVTPackage)
#cmakedefine GEOSX_USE_PVTPackage

/// Enables use of Python (CMake option ENABLE_PYTHON)
#cmakedefine GEOSX_USE_PYGEOSX

/// Enables use of RAJA (CMake option ENABLE_RAJA)
#cmakedefine GEOSX_USE_RAJA

/// Enables use of sys/time.h based timers (CMake option ENABLE_TIMERS)
#cmakedefine GEOSX_USE_TIMERS

/// Enables use of additional debugging interface for TotalView (Cmake option ENABLE_TOTALVIEW_OUTPUT)
#cmakedefine GEOSX_USE_TOTALVIEW_OUTPUT

/// Enables use of Intel MKL (CMake option ENABLE_MKL)
#cmakedefine GEOSX_USE_MKL

/// Enables use of Trilinos library (CMake option ENABLE_TRILINOS)
#cmakedefine GEOSX_USE_TRILINOS

/// Enables use of Hypre library (CMake option ENABLE_HYPRE)
#cmakedefine GEOSX_USE_HYPRE

#if defined( GEOSX_USE_HYPRE )
  /// Parsed hypre version information
  #define HYPRE_VERSION_MAJOR @HYPRE_VERSION_MAJOR@
  /// Parsed hypre version information
  #define HYPRE_VERSION_MINOR @HYPRE_VERSION_MINOR@
  /// Parsed hypre version information
  #define HYPRE_VERSION_PATCH @HYPRE_VERSION_PATCH@
#endif

/// Denotes HYPRE using CPU
#define GEOSX_USE_HYPRE_CPU 0
/// Denotes HYPRE using CUDA
#define GEOSX_USE_HYPRE_CUDA 1
/// Denotes HYPRE using HIP
#define GEOSX_USE_HYPRE_HIP 2
/// Macro determining what parellel interface hypre is using
#cmakedefine GEOSX_USE_HYPRE_DEVICE @GEOSX_USE_HYPRE_DEVICE@

/// Enables use of SuperLU_dist library through HYPRE (CMake option ENABLE_SUPERLU_DIST)
#cmakedefine GEOSX_USE_SUPERLU_DIST

/// Enables use of PETSc library (CMake option ENABLE_PETSC)
#cmakedefine GEOSX_USE_PETSC

/// Enables use of Scotch library (CMake option ENABLE_SCOTCH)
#cmakedefine GEOSX_USE_SCOTCH

/// Choice of global linear algebra interface (CMake option GEOSX_LA_INTERFACE)
#cmakedefine GEOSX_LA_INTERFACE @GEOSX_LA_INTERFACE@
/// Macro defined when Trilinos interface is selected
#cmakedefine GEOSX_LA_INTERFACE_TRILINOS
/// Macro defined when Hypre interface is selected
#cmakedefine GEOSX_LA_INTERFACE_HYPRE
/// Macro defined when PETSc interface is selected
#cmakedefine GEOSX_LA_INTERFACE_PETSC

/// Platform-dependent mangling of fortran function names (CMake option FORTRAN_MANGLE_NO_UNDERSCORE)
#cmakedefine FORTRAN_MANGLE_NO_UNDERSCORE

/// USE OF SEPARATION COEFFICIENT IN FRACTURE FLOW
#cmakedefine GEOSX_USE_SEPARATION_COEFFICIENT

/// CMake option CMAKE_BUILD_TYPE
#cmakedefine GEOSX_CMAKE_BUILD_TYPE @GEOSX_CMAKE_BUILD_TYPE@

/// The type that localIndex will be aliased to.
#define GEOSX_LOCALINDEX_TYPE @GEOSX_LOCALINDEX_TYPE@

/// An integer flag representing the type that localIndex will be aliased to.
#define GEOSX_LOCALINDEX_TYPE_FLAG @GEOSX_LOCALINDEX_TYPE_FLAG@

/// The type that globalIndex will be aliased to.
#define GEOSX_GLOBALINDEX_TYPE @GEOSX_GLOBALINDEX_TYPE@

/// An integer flag representing the type that globalIndex will be aliased to.
#define GEOSX_GLOBALINDEX_TYPE_FLAG @GEOSX_GLOBALINDEX_TYPE_FLAG@

/// The default block size for GEOSX on this platform
#cmakedefine GEOSX_BLOCK_SIZE @GEOSX_BLOCK_SIZE@ 

/// Version information for HDF5
#cmakedefine HDF5_VERSION @HDF5_VERSION@

/// Version information for Conduit
#cmakedefine Conduit_VERSION @Conduit_VERSION@

/// Version information for RAJA
#cmakedefine RAJA_VERSION @RAJA_VERSION@

/// Version information for umpire
#cmakedefine umpire_VERSION @umpire_VERSION@

/// Version information for chai
#cmakedefine chai_VERSION @chai_VERSION@

/// Version information for adiak
#cmakedefine adiak_VERSION @adiak_VERSION@

/// Version information for caliper
#cmakedefine caliper_VERSION @caliper_VERSION@

/// Version information for Metis
#cmakedefine METIS_VERSION @METIS_VERSION@

/// Version information for ParMetis
#cmakedefine PARAMETIS_VERSION @PARAMETIS_VERSION@

/// Version information for scotch
#cmakedefine scotch_VERSION @scotch_VERSION@

/// Version information for superlu_dist
#cmakedefine superlu_dist_VERSION @superlu_dist_VERSION@

/// Version information for suitesparse
#cmakedefine suitesparse_VERSION @suitesparse_VERSION@

/// Version information for VTK
#cmakedefine VTK_VERSION @VTK_VERSION@

/// Version information for fmt
#cmakedefine fmt_VERSION @fmt_VERSION@

/// Version information for python
#cmakedefine Python3_VERSION @Python3_VERSION@

/// Version information for CUDAToolkit
#cmakedefine CUDAToolkit_VERSION @CUDAToolkit_VERSION@

#if defined(GEOSX_USE_CUDA) || defined(GEOSX_USE_HIP)
// This needs to be placed into this header in order to appropriately replace
//  the old usage of GEOSX_USE_CUDA, since we detect whether it is defined
//  rather than a value, not having it in the *same* header can cauase nebulous
//  compilation problems including the USD of arrays changing depending the scope
#define GEOSX_USE_DEVICE
#endif

#endif  /* GEOSX_CONFIG_HPP */

