

#include "physicsSolvers/solidMechanics/kernels/ExplicitSmallStrain_impl.hpp"
#include "physicsSolvers/solidMechanics/kernels/ExplicitFiniteStrain_impl.hpp"
#include "physicsSolvers/solidMechanics/kernels/ImplicitSmallStrainQuasiStatic_impl.hpp"
#include "policies.hpp"


namespace geosx
{
using namespace constitutive;
using namespace finiteElement;
namespace solidMechanicsLagrangianFEMKernels
{
template class ExplicitSmallStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ >;

template real64 ExplicitSmallStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ >::
kernelLaunch< ExplicitSmallStrainPolicy, 
              ExplicitSmallStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ > >
              ( localIndex const, 
                ExplicitSmallStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ > const & );



template class ExplicitFiniteStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ >;

template real64 ExplicitFiniteStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ >::
kernelLaunch< ExplicitFiniteStrainPolicy, 
              ExplicitFiniteStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ > >
              ( localIndex const, 
                ExplicitFiniteStrain< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ > const & );




template class ImplicitSmallStrainQuasiStatic< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ >;

template real64 ImplicitSmallStrainQuasiStatic< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ >::
kernelLaunch< ImplicitSmallStrainQuasiStaticPolicy, 
              ImplicitSmallStrainQuasiStatic< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ > >
              ( localIndex const, 
                ImplicitSmallStrainQuasiStatic< @SUBREGION_TYPE@, @CONSTITUTIVE_TYPE@, @FE_TYPE@ > const & );



}
}
