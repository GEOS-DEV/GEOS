/*
 * ------------------------------------------------------------------------------------------------------------
 * SPDX-License-Identifier: LGPL-2.1-only
 *
 * Copyright (c) 2018-2020 Lawrence Livermore National Security LLC
 * Copyright (c) 2018-2020 The Board of Trustees of the Leland Stanford Junior University
 * Copyright (c) 2018-2020 TotalEnergies
 * Copyright (c) 2019-     GEOSX Contributors
 * All rights reserved
 *
 * See top level LICENSE, COPYRIGHT, CONTRIBUTORS, NOTICE, and ACKNOWLEDGEMENTS files for details.
 * ------------------------------------------------------------------------------------------------------------
 */

/**
 * @file MultiFluidUpdate_@FLUID_TYPE@.cpp
 * @details Generated from MultiFluidUpdate.cpp.template
 */

#include "physicsSolvers/fluidFlow/kernels/MultiFluidUpdate.hpp"
#include "physicsSolvers/fluidFlow/kernels/MultiFluidUpdateImpl.hpp"
#include "common/GeosxConfig.hpp"

#include "constitutive/fluid/multifluid/blackOil/DeadOilFluid.hpp"
#include "constitutive/fluid/multifluid/blackOil/BlackOilFluid.hpp"
#include "constitutive/fluid/multifluid/CO2Brine/CO2BrineFluid.hpp"
#ifdef GEOSX_USE_PVTPackage
#include "constitutive/fluid/multifluid/compositional/CompositionalMultiphaseFluidPVTPackage.hpp"
#endif
#include "constitutive/fluid/multifluid/compositional/CompositionalMultiphaseFluid.hpp"

namespace geos
{

  using namespace constitutive;

  template struct MultiFluidUpdate::Updater< @FLUID_TYPE@ >;

  template struct MultiFluidUpdate::KernelWrapper< @FLUID_TYPE@::KernelWrapper >;

} // namespace geos
