#include "physicsSolvers/fluidFlow/CompositionalMultiphaseHybridFVMKernels_impl.hpp"

namespace geos
{
namespace compositionalMultiphaseHybridFVMKernels
{
  constexpr int NF = @NFACES@;
  constexpr int NC = @NCOMPS@;
  constexpr int NP = @NPHASES@;
  using IP_TYPE = @IP_TYPE@;

  @EXTERN@
  template
  void
  FluxKernel::
    launch< NF, NC, NP, IP_TYPE >( localIndex er, localIndex esr,
                                   CellElementSubRegion const & subRegion,
                                   constitutive::PermeabilityBase const & permeabilityModel,
                                   SortedArrayView< localIndex const > const & regionFilter,
                                   arrayView2d< real64 const, nodes::REFERENCE_POSITION_USD > const & nodePosition,
                                   arrayView2d< localIndex const > const & elemRegionList,
                                   arrayView2d< localIndex const > const & elemSubRegionList,
                                   arrayView2d< localIndex const > const & elemList,
                                   ArrayOfArraysView< localIndex const > const & faceToNodes,
                                   arrayView1d< globalIndex const > const & faceDofNumber,
                                   arrayView1d< integer const > const & faceGhostRank,
                                   arrayView1d< real64 const > const & facePres,
                                   arrayView1d< real64 const > const & faceGravCoef,
                                   arrayView1d< real64 const > const & mimFaceGravCoef,
                                   arrayView1d< real64 const > const & transMultiplier,
                                   ElementViewConst< arrayView2d< real64 const, compflow::USD_PHASE > > const & phaseMob,
                                   ElementViewConst< arrayView3d< real64 const, compflow::USD_PHASE_DC > > const & dPhaseMob,
                                   ElementViewConst< arrayView3d< real64 const, compflow::USD_COMP_DC > > const & dCompFrac_dCompDens,
                                   ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseDens,
                                   ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseDens,
                                   ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseMassDens,
                                   ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseMassDens,
                                   ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_COMP > > const & phaseCompFrac,
                                   ElementViewConst< arrayView5d< real64 const, multifluid::USD_PHASE_COMP_DC > > const & dPhaseCompFrac,
                                   ElementViewConst< arrayView1d< globalIndex const > > const & elemDofNumber,
                                   globalIndex const rankOffset,
                                   real64 const lengthTolerance,
                                   real64 const dt,
                                   CRSMatrixView< real64, globalIndex const > const & localMatrix,
                                   arrayView1d< real64 > const & localRhs );

}
}

