#include "physicsSolvers/fluidFlow/CompositionalMultiphaseHybridFVMKernels_impl.hpp"

namespace geos
{
namespace compositionalMultiphaseHybridFVMKernels
{
  constexpr int NF = @NFACES@;
  constexpr int NC = @NCOMPS@;
  constexpr int NP = @NPHASES@;

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  AssemblerKernelHelper::
    applyGradient< NF, NC, NP >( arrayView1d< real64 const > const & facePres,
                                 arrayView1d< real64 const > const & faceGravCoef,
                                 arraySlice1d< localIndex const > const & elemToFaces,
                                 real64 const & elemPres,
                                 real64 const & elemGravCoef,
                                 arraySlice1d< real64 const, multifluid::USD_PHASE-2 > const & elemPhaseMassDens,
                                 arraySlice2d< real64 const, multifluid::USD_PHASE_DC-2 > const & dElemPhaseMassDens_dCompFrac,
                                 arraySlice1d< real64 const, compflow::USD_PHASE-1 > const & elemPhaseMob,
                                 arraySlice2d< real64 const, compflow::USD_PHASE_DC-1 > const & dElemPhaseMob,
                                 arraySlice2d< real64 const, compflow::USD_COMP_DC-1 > const & dElemCompFrac_dCompDens,
                                 arraySlice2d< real64 const > const & transMatrix,
                                 real64 ( &oneSidedVolFlux )[ NF ],
                                 real64 ( &dOneSidedVolFlux_dPres )[ NF ],
                                 real64 ( &dOneSidedVolFlux_dFacePres )[ NF ][ NF ],
                                 real64 ( &dOneSidedVolFlux_dCompDens )[ NF ][ NC ] );

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  AssemblerKernelHelper::
    assembleFluxDivergence< NF, NC, NP >( localIndex const (&localIds)[ 3 ],
                                          globalIndex const rankOffset,
                                          arrayView2d< localIndex const > const & elemRegionList,
                                          arrayView2d< localIndex const > const & elemSubRegionList,
                                          arrayView2d< localIndex const > const & elemList,
                                          SortedArrayView< localIndex const > const & regionFilter,
                                          arrayView1d< globalIndex const > const & faceDofNumber,
                                          arrayView1d< real64 const > const & mimFaceGravCoef,
                                          arraySlice1d< localIndex const > const & elemToFaces,
                                          real64 const & elemGravCoef,
                                          ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseDens,
                                          ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseDens,
                                          ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseMassDens,
                                          ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseMassDens,
                                          ElementViewConst< arrayView2d< real64 const, compflow::USD_PHASE > > const & phaseMob,
                                          ElementViewConst< arrayView3d< real64 const, compflow::USD_PHASE_DC > > const & dPhaseMob,
                                          ElementViewConst< arrayView3d< real64 const, compflow::USD_COMP_DC > > const & dCompFrac_dCompDens,
                                          ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_COMP > > const & phaseCompFrac,
                                          ElementViewConst< arrayView5d< real64 const, multifluid::USD_PHASE_COMP_DC > > const & dPhaseCompFrac,
                                          ElementViewConst< arrayView1d< globalIndex const > > const & elemDofNumber,
                                          arraySlice2d< real64 const > const & transMatrixGrav,
                                          real64 const (&oneSidedVolFlux)[ NF ],
                                          real64 const (&dOneSidedVolFlux_dPres)[ NF ],
                                          real64 const (&dOneSidedVolFlux_dFacePres)[ NF ][ NF ],
                                          real64 const (&dOneSidedVolFlux_dCompDens)[ NF ][ NC ],
                                          real64 const & dt,
                                          CRSMatrixView< real64, globalIndex const > const & localMatrix,
                                          arrayView1d< real64 > const & localRhs );
  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  AssemblerKernelHelper::
    assembleViscousFlux< NF, NC, NP >( localIndex const ifaceLoc,
                                       real64 const (&oneSidedVolFlux)[ NF ],
                                       real64 const (&dOneSidedVolFlux_dPres)[ NF ],
                                       real64 const (&dOneSidedVolFlux_dFacePres)[ NF ][ NF ],
                                       real64 const (&dOneSidedVolFlux_dCompDens)[ NF ][ NC ],
                                       real64 const (&upwPhaseViscCoef)[ NP ][ NC ],
                                       real64 const (&dUpwPhaseViscCoef_dPres)[ NP ][ NC ],
                                       real64 const (&dUpwPhaseViscCoef_dCompDens)[ NP ][ NC ][ NC ],
                                       globalIndex const elemDofNumber,
                                       globalIndex const neighborDofNumber,
                                       globalIndex const upwViscDofNumber,
                                       globalIndex const faceDofNumber,
                                       real64 const & dt,
                                       real64 ( &divMassFluxes )[ NC ],
                                       real64 ( &dDivMassFluxes_dElemVars )[ NC ][ (NC+1)*(NF+1) ],
                                       real64 ( &dDivMassFluxes_dFaceVars )[ NC ][ NF ],
                                       globalIndex ( &dofColIndicesElemVars )[ (NC+1)*(NF+1) ],
                                       globalIndex ( &dofColIndicesFaceVars )[ NF ] );
  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  AssemblerKernelHelper::
    assembleBuoyancyFlux< NF, NC, NP >( localIndex const ifaceLoc,
                                        real64 const (&phaseGravTerm)[ NP ][ NP-1 ],
                                        real64 const (&dPhaseGravTerm_dPres)[ NP ][ NP-1 ][ 2 ],
                                        real64 const (&dPhaseGravTerm_dCompDens)[ NP ][ NP-1 ][ 2 ][ NC ],
                                        real64 const (&upwPhaseGravCoef)[ NP ][ NP-1 ][ NC ],
                                        real64 const (&dUpwPhaseGravCoef_dPres)[ NP ][ NP-1 ][ NC ][ 2 ],
                                        real64 const (&dUpwPhaseGravCoef_dCompDens)[ NP ][ NP-1 ][ NC ][ 2 ][ NC ],
                                        real64 const & dt,
                                        real64 ( &divMassFluxes )[ NC ],
                                        real64 ( &dDivMassFluxes_dElemVars )[ NC ][ (NC+1)*(NF+1) ] );
  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  AssemblerKernelHelper::
    assembleFaceConstraints< NF, NC, NP >( arrayView1d< globalIndex const > const & faceDofNumber,
                                           arrayView1d< integer const > const & faceGhostRank,
                                           arraySlice1d< localIndex const > const & elemToFaces,
                                           globalIndex const elemDofNumber,
                                           globalIndex const rankOffset,
                                           real64 const (&oneSidedVolFlux)[ NF ],
                                           real64 const (&dOneSidedVolFlux_dPres)[ NF ],
                                           real64 const (&dOneSidedVolFlux_dFacePres)[ NF ][ NF ],
                                           real64 const (&dOneSidedVolFlux_dCompDens)[ NF ][ NC ],
                                           CRSMatrixView< real64, globalIndex const > const & localMatrix,
                                           arrayView1d< real64 > const & localRhs );

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  AssemblerKernel::
    compute< NF, NC, NP >( localIndex const er, localIndex const esr, localIndex const ei,
                           SortedArrayView< localIndex const > const & regionFilter,
                           arrayView2d< localIndex const > const & elemRegionList,
                           arrayView2d< localIndex const > const & elemSubRegionList,
                           arrayView2d< localIndex const > const & elemList,
                           arrayView1d< globalIndex const > const & faceDofNumber,
                           arrayView1d< integer const > const & faceGhostRank,
                           arrayView1d< real64 const > const & facePres,
                           arrayView1d< real64 const > const & faceGravCoef,
                           arrayView1d< real64 const > const & mimFaceGravCoef,
                           arraySlice1d< localIndex const > const & elemToFaces,
                           real64 const & elemPres,
                           real64 const & elemGravCoef,
                           ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseDens,
                           ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseDens,
                           ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseMassDens,
                           ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseMassDens,
                           ElementViewConst< arrayView2d< real64 const, compflow::USD_PHASE > > const & phaseMob,
                           ElementViewConst< arrayView3d< real64 const, compflow::USD_PHASE_DC > > const & dPhaseMob,
                           ElementViewConst< arrayView3d< real64 const, compflow::USD_COMP_DC > > const & dCompFrac_dCompDens,
                           ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_COMP > > const & phaseCompFrac,
                           ElementViewConst< arrayView5d< real64 const, multifluid::USD_PHASE_COMP_DC > > const & dPhaseCompFrac,
                           ElementViewConst< arrayView1d< globalIndex const > > const & elemDofNumber,
                           integer const elemGhostRank,
                           globalIndex const rankOffset,
                           real64 const & dt,
                           arraySlice2d< real64 const > const & transMatrix,
                           arraySlice2d< real64 const > const & transMatrixGrav,
                           CRSMatrixView< real64, globalIndex const > const & localMatrix,
                           arrayView1d< real64 > const & localRhs );

}
}

