#include "physicsSolvers/fluidFlow/CompositionalMultiphaseHybridFVMKernels_impl.hpp"

namespace geos
{
namespace compositionalMultiphaseHybridFVMKernels
{
  constexpr int NC = @NCOMPS@;
  constexpr int NP = @NPHASES@;

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  UpwindingHelper::
    upwindViscousCoefficient< NC, NP >( localIndex const (&localIds)[ 3 ],
                                        localIndex const (&neighborIds)[ 3 ],
                                        ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseDens,
                                        ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseDens,
                                        ElementViewConst< arrayView2d< real64 const, compflow::USD_PHASE > > const & phaseMob,
                                        ElementViewConst< arrayView3d< real64 const, compflow::USD_PHASE_DC > > const & dPhaseMob,
                                        ElementViewConst< arrayView3d< real64 const, compflow::USD_COMP_DC > > const & dCompFrac_dCompDens,
                                        ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_COMP > > const & phaseCompFrac,
                                        ElementViewConst< arrayView5d< real64 const, multifluid::USD_PHASE_COMP_DC > > const & dPhaseCompFrac,
                                        ElementViewConst< arrayView1d< globalIndex const > > const & elemDofNumber,
                                        real64 const & oneSidedVolFlux,
                                        real64 ( &upwPhaseViscCoef )[ NP ][ NC ],
                                        real64 ( &dUpwPhaseViscCoef_dPres )[ NP ][ NC ],
                                        real64 ( &dUpwPhaseViscCoef_dCompDens )[ NP ][ NC ][ NC ],
                                        globalIndex & upwViscDofNumber );

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  UpwindingHelper::
    upwindBuoyancyCoefficient< NC, NP >( localIndex const (&localIds)[ 3 ],
                                         localIndex const (&neighborIds)[ 3 ],
                                         real64 const & transGravCoef,
                                         ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseDens,
                                         ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseDens,
                                         ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseMassDens,
                                         ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseMassDens,
                                         ElementViewConst< arrayView2d< real64 const, compflow::USD_PHASE > > const & phaseMob,
                                         ElementViewConst< arrayView3d< real64 const, compflow::USD_PHASE_DC > > const & dPhaseMob,
                                         ElementViewConst< arrayView3d< real64 const, compflow::USD_COMP_DC > > const & dCompFrac_dCompDens,
                                         ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_COMP > > const & phaseCompFrac,
                                         ElementViewConst< arrayView5d< real64 const, multifluid::USD_PHASE_COMP_DC > > const & dPhaseCompFrac,
                                         real64 ( &phaseGravTerm )[ NP ][ NP-1 ],
                                         real64 ( &dPhaseGravTerm_dPres )[ NP ][ NP-1 ][ 2 ],
                                         real64 ( &dPhaseGravTerm_dCompDens )[ NP ][ NP-1 ][ 2 ][ NC ],
                                         real64 ( &upwPhaseGravCoef )[ NP ][ NP-1 ][ NC ],
                                         real64 ( &dUpwPhaseGravCoef_dPres )[ NP ][ NP-1 ][ NC ][ 2 ],
                                         real64 ( &dUpwPhaseGravCoef_dCompDens )[ NP ][ NP-1 ][ NC ][ 2 ][ NC ] );

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  UpwindingHelper::
    computePhaseGravTerm< NC, NP >( localIndex const (&localIds)[ 3 ],
                                    localIndex const (&neighborIds)[ 3 ],
                                    real64 const & transGravCoef,
                                    ElementViewConst< arrayView3d< real64 const, multifluid::USD_PHASE > > const & phaseMassDens,
                                    ElementViewConst< arrayView4d< real64 const, multifluid::USD_PHASE_DC > > const & dPhaseMassDens,
                                    ElementViewConst< arrayView3d< real64 const, compflow::USD_COMP_DC > > const & dCompFrac_dCompDens,
                                    real64 ( &phaseGravTerm )[ NP ][ NP-1 ],
                                    real64 ( &dPhaseGravTerm_dPres )[ NP ][ NP-1 ][ 2 ],
                                    real64 ( &dPhaseGravTerm_dCompDens )[ NP ][ NP-1 ][ 2 ][ NC ] );

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  UpwindingHelper::
    computeUpwindedTotalMobility< NC, NP >( localIndex const (&localIds)[ 3 ],
                                            localIndex const (&neighborIds)[ 3 ],
                                            ElementViewConst< arrayView2d< real64 const, compflow::USD_PHASE > > const & phaseMob,
                                            ElementViewConst< arrayView3d< real64 const, compflow::USD_PHASE_DC > > const & dPhaseMob,
                                            real64 const (&phaseGravTerm)[ NP ][ NP-1 ],
                                            real64 & totalMob,
                                            real64 ( &dTotalMob_dPres )[ 2 ],
                                            real64 ( &dTotalMob_dCompDens )[ 2 ][ NC ] );

  @EXTERN@
  template
  GEOS_HOST_DEVICE
  void
  UpwindingHelper::
    setIndicesForTotalMobilityUpwinding< NP >( localIndex const (&localIds)[ 3 ],
                                               localIndex const (&neighborIds)[ 3 ],
                                               real64 const (&gravTerm)[ NP ][ NP-1 ],
                                               localIndex ( &totalMobIds )[ NP ][ 3 ],
                                               localIndex ( &totalMobPos )[ NP ] );

}
}

