<?xml version="1.0" ?>

<Problem>
  <Solvers>
    <!-- define the solver -->
    <!-- we'll have to discuss the cflFactor with Randy -->
    <!-- define the source coordinates -->
    <!-- define the time source frequency -->
    <!-- define the receiver coordinates -->
    <AcousticSEM
      name="acousticSolver"
      cflFactor="0.25"
      discretization="FE1"
      targetRegions="{ Region }"
      sourceCoordinates="{ { 1005.0, 1005.0, 1005.0 } }"
      timeSourceFrequency="5.0"
      receiverCoordinates="{ { 1105,1005, 1005 } }"/>
  </Solvers>

  <!-- hexahedral mesh generated internally by GEOSX -->
  <!-- there is also an option to import external meshes -->
  <Mesh>
    <InternalMesh
      name="mesh"
      elementTypes="{ C3D8 }"
      xCoords="{ 0, 2000 }"
      yCoords="{ 0, 2000 }"
      zCoords="{ 0, 2000 }"
      nx="{ 100 }"
      ny="{ 100 }"
      nz="{ 100 }"
      cellBlockNames="{ cb }"/>
  </Mesh>

  <Geometry>
    <!-- <Box
      name="zneg"
      xMin="-0.01, -0.01, -0.01"
      xMax=" 2000.01, 2000.01 , 0.01"/>
    -->
    <Box
      name="zpos"
      xMin="-0.01, -0.01, 1999.99"
      xMax=" 2000.01, 0.11, 2000.01"/>

  </Geometry>

   
  <Events
    maxTime="0.08">
    <!-- trigger the application of the solver -->
    <!-- control the timestepping here with forceDt -->
    <!-- (there are other ways to control the time step size) -->
    <PeriodicEvent
      name="solverApplications"
      forceDt="0.005"
      target="/Solvers/acousticSolver"/>
    <!-- generate an output that can be read from VTK -->
 
    <PeriodicEvent
      name="python"
      cycleFrequency="10"
      targetExactTimestep="0"
      target="/Outputs/pythonOutput"/>
  </Events>

  <NumericalMethods>
    <FiniteElements>
      <FiniteElementSpace
        name="FE1"
        order="1"/>
    </FiniteElements>
  </NumericalMethods>
  
  <ElementRegions>
    <CellElementRegion
      name="Region"
      cellBlocks="{ cb }"
      materialList="{ nullModel }"/>
  </ElementRegions>

  <Constitutive>
    
    <!-- add something here if needed -->
    <NullModel
      name="nullModel"/>
  </Constitutive>

  <FieldSpecifications>
    
    <!-- here use FieldSpecification to define: -->

   
    <!-- 2) The initial pressure field -->
    <FieldSpecification
      name="initialPressure"
      initialCondition="1"
      setNames="{ all }"
      objectPath="nodeManager"
      fieldName="pressure_n"
      scale="0.0"/>
    
    <FieldSpecification
      name="initialPressure"
      initialCondition="1"
      setNames="{ all }"
      objectPath="nodeManager"
      fieldName="pressure_nm1"
      scale="0.0"/>
    
    <!-- 3) The velocity in the domain -->

    <FieldSpecification
      name="cellVelocity"
      initialCondition="1"
      objectPath="ElementRegions/Region/elementSubRegions/cb"
      fieldName="mediumVelocity"
      scale="1500"
      setNames="{ all }"/>

    <!-- 4) The free surface condition the domain -->
    <FieldSpecification
      name="zposFreeSurface"
      objectPath="faceManager"
      fieldName="FreeSurface"
      scale="0.0"
      setNames="{ zpos }"/>
    

  </FieldSpecifications>

    <!-- collect the pressure values at the nodes -->

  <Tasks>
    <PackCollection
      name="pressureCollection"
      objectPath="nodeManager"
      fieldName="pressure_np1"/>
  </Tasks>

  <Outputs>

    <!-- output all the mesh values registered with a plot level LEVEL_0, LEVEL_1, LEVEL_2, LEVEL_3   -->

    
    <Python
      name="pythonOutput"/>
    <!-- output the pressure values to a file named pressure_history.hdf5  -->

    
  </Outputs>
  
</Problem>
