.. _CompositionalMultiphaseWell:

#######################################
Compositional Multiphase Well Solver
#######################################

Introduction
=============

We present a description of the well solvers in three steps:

1. :ref:`well_theory`

    a. :ref:`well_equations`

    b. :ref:`well_primary_variables`

2. :ref:`well_usage`

3. :ref:`well_input_example`

We focus on the compositional multiphase well solver. The structure of the single-phase well solver is analogous and will not be described here for brevity.

.. _well_theory:

Theory
=========================

Here, we give an overview of the well formulation implemented in GEOSX. We review the set of :ref:`well_equations`, and then we describe the :ref:`well_primary_variables` used the well solvers.

.. _well_equations:

Discrete  equations
-------------------

We assume that the well is discretized into segments denoted by the index :math:`i`.

Mass conservation
~~~~~~~~~~~~~~~~~~

In each well segment, mass conservation for component :math:`c` reads:

.. math::
  z^{upw}_{c,(i-1,i)} q_{(i-1,i)} - z^{upw}_{c,(i,i+1)} q_{(i,i+1)} + q^{perf}_{c,i} = 0,

where we have neglected the accumulation term.
In the previous equation, :math:`z^{upw}_{c,(i,j)}` is the upwinded mass fraction of component :math:`c` at the interface between segments `a` and `b`, :math:`q_{(i,j)}` is the total mass flux between segments :math:`a` and :math:`b`, and :math:`q^{perf}_{c,i}` is the source/sink term generated by the perforations -- i.e., the connections between the well and the reservoir.
The upwinded mass fractions are computed as:

.. math::
  z^{upw}_{c,(i,j)} = \left\{ \begin{array}{cl} z_{c,i} & \text{if} \, \, q_{(i,j)} > 0 \\[10pt] z_{c,j} & \text{otherwise.} \end{array}\right.

The perforation terms are obtained with:

.. math::
  q^{perf}_{c,i} = \left\{ \begin{array}{cl} WI z_{c,i} \rho_{m,i} \lambda^{res}_T  \Delta \Phi & \text{if the well is upstream (i.e.,} \, \, \Delta \Phi > 0)  \\[10pt] WI x^{res}_{c,p} \rho^{res}_p \lambda^{res}_p \Delta \Phi & \text{otherwise,} \end{array}\right.

where :math:`\Delta \Phi = p_i - p^{res} + \rho_{m,i} g \Delta d_{i,perf}` is the potential gradient between the segment center and the reservoir center.
In the expression of the potential gradient, the mixture density is computed as :math:`\rho_{m,i} = \sum_p S_{p,i} \rho_{p,i}`.
The superscript :math:`res` means that the variable is evaluated at the center of the reservoir element.

Volume constraint equation
~~~~~~~~~~~~~~~~~~~~~~~~~~

As in the :ref:`CompositionalMultiphaseFlow`, the system is closed with a volume constraint equation.

Pressure relations
~~~~~~~~~~~~~~~~~~

In the current implementation of the well solver, we assume a hydrostatic equilibrium:

.. math::
  p_{i+1} - p_i = \rho_{m,(i,i+1)} g \Delta d_{i,i+1},

where :math:`\rho_{m,(i,i+1)}` is the arithmetic average of the mixture densities evaluated in segments :math:`i` and :math:`i+1`.
Pressure drop components due to friction and acceleration are not implemented at the moment.

Pressure and rate controls
~~~~~~~~~~~~~~~~~~~~~~~~~~

The well solver supports two types of control, namely, pressure control and rate control.

If pressure control is chosen, we add the following constraint for the pressure of the top segment of the well:

.. math::
  p_0 - p^{target} = 0

In this case, we check that at each iteration of the Newton solver, the rate at the top of the first segment is smaller than the the maximum rate specified by the user.
If this is not the case, we switch to rate control.

If rate control is used, we add the following constraint for the rate at the top of the first segment, denoted by :math:`q_{-1,0}`:

.. math::
  q_{(-1,0)} - q^{target} = 0

If the pressure at the top segment becomes too large than the maximum pressure specified by the user, then we switch to pressure control.

To summarize, the compositional multiphase flow solver assembles a set of :math:`n_c+2` equations, i.e., :math:`n_c` mass conservation equations and 1 volume constraint equation in each segment, plus 1 pressure relation at the interface between a segment and the next segment in the direction of the well head.
For the top segment, the pressure relation is replace with the control equation.

==================== ======================================
Number of equations  Equation type
==================== ======================================
:math:`n_c`          Mass conservation equations
1                    Pressure relation or control equation
1                    Volume constraint
==================== ======================================

.. _well_primary_variables:

Primary variables
------------------

The well variable formulation is the same as that of the :ref:`CompositionalMultiphaseFlow`.
In a well segment, in addition to the :math:`n_c+1` primary variables of the :ref:`CompositionalMultiphaseFlow`, namely, one pressure, :math:`p`, and
:math:`n_c` component densities, :math:`\rho_c`, we also treat the total mass flux at the interface with the next segment, denoted by :math:`q`, as a primary variable.


=========================== ===================================================
Number of primary variables Variable type
=========================== ===================================================
1                           Pressure
1                           Total mass flux at the interface with next segment
:math:`n_c`                 Component densities
=========================== ===================================================

.. _well_usage:

Usage
=====

The following attributes are supported:

.. include:: /coreComponents/fileIO/schema/docs/CompositionalMultiphaseWell.rst

.. _well_input_example:

Input example
=========================

.. literalinclude:: ../../coreComponents/physicsSolvers/fluidFlow/integratedTests/compositionalMultiphaseWell/compositional_multiphase_wells_2d.xml
  :language: xml
  :start-after: <!-- SPHINX_COMP_WELL_SOLVER -->
  :end-before: <!-- SPHINX_COMP_WELL_SOLVER_END -->
