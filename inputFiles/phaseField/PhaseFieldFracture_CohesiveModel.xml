<?xml version="1.0" ?>

<Problem>
  <Solvers
    gravityVector="{ 0.0, 0.0, 0.0 }">
    <PhaseFieldFracture
      name="PhaseFieldSolve"
      solidSolverName="SolidMechSolve"
      damageSolverName="DamageSolve"
      logLevel="1"
      targetRegions="{ Region1 }">
      <NonlinearSolverParameters
        newtonMaxIter="2"/>
      <LinearSolverParameters
        logLevel="1"/>
    </PhaseFieldFracture>

    <SolidMechanicsLagrangianSSLE
      name="SolidMechSolve"
      timeIntegrationOption="QuasiStatic"
      logLevel="1"
      discretization="FE1"
      targetRegions="{ Region1 }">
      <NonlinearSolverParameters
        newtonMaxIter="50"
        newtonTol="1.0e-12"/>
      <LinearSolverParameters
        directParallel="0"/>
    </SolidMechanicsLagrangianSSLE>

    <PhaseFieldDamageFEM
      name="DamageSolve"
      discretization="FE1"
      timeIntegrationOption="SteadyState"
      localDissipation="Linear"
      logLevel="1"
      targetRegions="{ Region1 }">
      <NonlinearSolverParameters
        newtonMaxIter="50"
        newtonTol="1.0e-12"/>
      <LinearSolverParameters
        directParallel="0"/>
    </PhaseFieldDamageFEM>
  </Solvers>

  <Mesh>
    <InternalMesh
      name="mesh1"
      elementTypes="{ C3D8 }"
      xCoords="{ -1, 1 }"
      yCoords="{ -1, 1 }"
      zCoords="{ -1, 1 }"
      nx="{ 1 }"
      ny="{ 1 }"
      nz="{ 4 }"
      cellBlockNames="{ cb1 }"/>
  </Mesh>

  <Events
    maxTime="10.0">
    <!-- <SoloEvent name="siloOutput0"
                   target="/Outputs/SiloOutput"/> -->
    <!-- This event is applied every cycle, and overrides the
    solver time-step request -->
    <PeriodicEvent
      name="solverApplications"
      forceDt="1"
      target="/Solvers/PhaseFieldSolve"/>

    <!-- This event is applied every 1.0s.  The targetExactTimestep
    flag allows this event to request a dt modification to match an
    integer multiple of the timeFrequency. -->
    <PeriodicEvent
      name="outputs"
      timeFrequency="1"
      target="/Outputs/PhaseFieldFracture_CohesiveModel_VTKOutput"/>

    <PeriodicEvent
      name="siloOutputs"
      timeFrequency="1.0"
      target="/Outputs/PhaseFieldFracture_CohesiveModel_SiloOutput"/>

    <PeriodicEvent
      name="restarts"
      timeFrequency="5.0"
      targetExactTimestep="0"
      target="/Outputs/restartOutput"/>
  </Events>

  <NumericalMethods>
    <FiniteElements>
      <FiniteElementSpace
        name="FE1"
        order="1"/>
    </FiniteElements>
  </NumericalMethods>

  <ElementRegions>
    <CellElementRegion
      name="Region1"
      cellBlocks="{ cb1 }"
      materialList="{ shale }"/>
  </ElementRegions>

  <Constitutive>
    <DamageSpectralElasticIsotropic
      name="shale"
      defaultDensity="2700"
      defaultBulkModulus="5.5556e9"
      defaultShearModulus="8.3333e9"
      lengthScale="0.2"
      criticalFractureEnergy="2.7"
      criticalStrainEnergy="1.0"/>
  </Constitutive>

  <FieldSpecifications>
    <!--<FieldSpecification name="boundary"
                        fieldName="Temperature"
                        objectPath="nodeManager"
                        scale="0"
                        setNames="{xneg, xpos, yneg, ypos, zneg, zpos}"/> -->
    <FieldSpecification
      name="xpos"
      objectPath="nodeManager"
      fieldName="totalDisplacement"
      component="0"
      scale="1.0e-7"
      functionName="f_b"
      setNames="{ ypos }"/>

    <FieldSpecification
      name="xneg"
      objectPath="nodeManager"
      fieldName="totalDisplacement"
      component="0"
      scale="-1.0e-7"
      functionName="f_b"
      setNames="{ yneg }"/>

    <!-- <FieldSpecification name="xconstraint1"
               objectPath="nodeManager"
               fieldName="totalDisplacement"
               component="0"
               scale="0.0000010"
               functionName="f_b"
               setNames="{xpos}"/> -->
    <FieldSpecification
      name="yconstraint"
      objectPath="nodeManager"
      fieldName="totalDisplacement"
      component="1"
      setNames="{ all }"/>

    <FieldSpecification
      name="zconstraint"
      objectPath="nodeManager"
      fieldName="totalDisplacement"
      component="2"
      setNames="{ all }"/>

    <!-- <FieldSpecification name="pointSource"
                        fieldName="Damage"
                        initialCondition="0"
                        objectPath="nodeManager"
                        scale="1"
                        setNames="{centerLine}"/> -->
    <!-- FieldSpecification name="pointSource2"
                        fieldName="Damage"
                        initialCondition="0"
                        objectPath="nodeManager"
                        scale="0"
                        setNames="{xneg,xpos}"/> -->
    <!-- <FieldSpecification name="diffusionCoeff"
                        initialCondition="1"
                        setNames="{all}"
                        objectPath="ElementRegions"
                        fieldName="coeffField"
                        scale="2e3"
                        functionName="f_b"
                        /> -->
  </FieldSpecifications>

  <Functions>
    <!-- These are example mathpresso functions.  In order to use them, you need to specify the order that the
    symbolic math function should expect the variables to be given, and an expression that it will compile.
    A list of available functions is given here: https://github.com/kobalicek/mathpresso -->
    <TableFunction
      name="f_b"
      inputVarNames="{ time }"
      coordinates="{ 0, 501 }"
      values="{ -1, 500 }"/>
  </Functions>

  <Outputs>
    <Silo
      name="PhaseFieldFracture_CohesiveModel_SiloOutput"/>

    <VTK
      name="PhaseFieldFracture_CohesiveModel_VTKOutput"
      plotFileRoot="plot"/>

    <Restart
      name="restartOutput"/>
  </Outputs>

  <Geometry>
    <Box
      name="centerLine"
      xMin="{ -0.001, -1.001, -1.001 }"
      xMax="{ +0.001, +1.001, +1.001 }"/>
  </Geometry>
</Problem>
