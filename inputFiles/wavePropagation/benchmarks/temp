diff --git a/inputFiles/wavePropagation/acous3D_abc.xml b/inputFiles/wavePropagation/acous3D_abc.xml
index a47cac60b..c24110c48 100644
--- a/inputFiles/wavePropagation/acous3D_abc.xml
+++ b/inputFiles/wavePropagation/acous3D_abc.xml
@@ -27,9 +27,9 @@
       xCoords="{ 0, 101 }"
       yCoords="{ 0, 101 }"
       zCoords="{ 0, 101 }"
-      nx="{ 10 }"
-      ny="{ 10 }"
-      nz="{ 10 }"
+      nx="{ 5 }"
+      ny="{ 5 }"
+      nz="{ 5 }"
       cellBlockNames="{ cb }"/>
   </Mesh>
 
diff --git a/inputFiles/wavePropagation/benchmarks/acous3D_benchmark.xml b/inputFiles/wavePropagation/benchmarks/acous3D_benchmark.xml
new file mode 100644
index 000000000..293c85c75
--- /dev/null
+++ b/inputFiles/wavePropagation/benchmarks/acous3D_benchmark.xml
@@ -0,0 +1,68 @@
+<?xml version="1.0" ?>
+
+<Problem>
+  <Solvers>
+    <!-- define the solver -->
+    <!-- define the source coordinates -->
+    <!-- define the time source frequency -->
+    <!-- define the receiver coordinates -->
+    <AcousticSEM
+      name="acousticSolver"
+      cflFactor="0.25"
+      discretization="FE1"
+      targetRegions="{ Region }"
+      sourceCoordinates="{ { 1000.1, 1000.1, 1000.1 } }"
+      timeSourceFrequency="5.0"
+      receiverCoordinates="{ { 1000.1, 1000.1, 1500.1 } }" />
+  </Solvers>
+
+  <!-- hexahedral mesh generated internally by GEOSX -->
+  <Mesh>
+    <InternalMesh
+      name="mesh"
+      elementTypes="{ C3D8 }"
+      xCoords="{ 0, 2000 }"
+      yCoords="{ 0, 2000 }"
+      zCoords="{ 0, 2000 }"
+      nx="{ 100 }"
+      ny="{ 100 }"
+      nz="{ 100 }"
+      cellBlockNames="{ cb }"/>
+  </Mesh>
+
+  <Geometry>
+    <Box
+      name="zpos"
+      xMin="{ -0.01, -0.01, 1999.99 }"
+      xMax="{ 2000.01, 2000.01, 2000.01 }"/>
+  </Geometry>
+
+  <Events
+    maxTime="1.5">
+    <!-- trigger the application of the solver -->
+    <!-- control the timestepping here with forceDt -->
+    <PeriodicEvent
+      name="solverApplications"
+      forceDt="0.005"
+      target="/Solvers/acousticSolver"/>
+
+    <!-- generate an output that can be read from VTK -->
+    <PeriodicEvent
+      name="vtk"
+      timeFrequency="0.05"
+      targetExactTimestep="0"
+      target="/Outputs/vtkOutput"/>
+
+    <!-- two events to output pressure in an hdf5 file -->
+    <PeriodicEvent
+      name="timeHistoryCollection"
+      timeFrequency="0.005"
+      target="/Tasks/pressureCollection"/>
+
+    <PeriodicEvent
+      name="timeHistoryOutput"
+      timeFrequency="0.05"
+      targetExactTimestep="0"
+      target="/Outputs/timeHistoryOutput"/>
+  </Events>
+</Problem>
diff --git a/inputFiles/wavePropagation/benchmarks/acous3D_cube2kmper2km.xml b/inputFiles/wavePropagation/benchmarks/acous3D_cube2kmper2km.xml
deleted file mode 100644
index 0c13db05c..000000000
--- a/inputFiles/wavePropagation/benchmarks/acous3D_cube2kmper2km.xml
+++ /dev/null
@@ -1,146 +0,0 @@
-<?xml version="1.0" ?>
-
-<Problem>
-  <Solvers>
-    <!-- define the solver -->
-    <!-- define the source coordinates -->
-    <!-- define the time source frequency -->
-    <!-- define the receiver coordinates -->
-    <AcousticSEM
-      name="acousticSolver"
-      cflFactor="0.25"
-      discretization="FE1"
-      targetRegions="{ Region }"
-      sourceCoordinates="{ { 1005.0, 1005.0, 1005.0 } }"
-      timeSourceFrequency="5.0"
-      receiverCoordinates="{ { 1105, 1005, 1005 } }"
-      outputSeismoTrace="1"/>
-  </Solvers>
-
-  <!-- hexahedral mesh generated internally by GEOSX -->
-  <Mesh>
-    <InternalMesh
-      name="mesh"
-      elementTypes="{ C3D8 }"
-      xCoords="{ 0, 2000 }"
-      yCoords="{ 0, 2000 }"
-      zCoords="{ 0, 2000 }"
-      nx="{ 100 }"
-      ny="{ 100 }"
-      nz="{ 100 }"
-      cellBlockNames="{ cb }"/>
-  </Mesh>
-
-  <Geometry>
-    <Box
-      name="zpos"
-      xMin="{ -0.01, -0.01, 1999.99 }"
-      xMax="{ 2000.01, 0.11, 2000.01 }"/>
-  </Geometry>
-
-  <Events
-    maxTime="1.5">
-    <!-- trigger the application of the solver -->
-    <!-- control the timestepping here with forceDt -->
-    <PeriodicEvent
-      name="solverApplications"
-      forceDt="0.005"
-      target="/Solvers/acousticSolver"/>
-
-    <!-- generate an output that can be read from VTK -->
-    <PeriodicEvent
-      name="vtk"
-      timeFrequency="0.05"
-      targetExactTimestep="0"
-      target="/Outputs/vtkOutput"/>
-
-    <!-- two events to output pressure in an hdf5 file -->
-    <PeriodicEvent
-      name="timeHistoryCollection"
-      timeFrequency="0.005"
-      target="/Tasks/pressureCollection"/>
-
-    <PeriodicEvent
-      name="timeHistoryOutput"
-      timeFrequency="0.05"
-      targetExactTimestep="0"
-      target="/Outputs/timeHistoryOutput"/>
-  </Events>
-
-  <NumericalMethods>
-    <FiniteElements>
-      <FiniteElementSpace
-        name="FE1"
-        order="1"/>
-    </FiniteElements>
-  </NumericalMethods>
-
-  <ElementRegions>
-    <CellElementRegion
-      name="Region"
-      cellBlocks="{ cb }"
-      materialList="{ nullModel }"/>
-  </ElementRegions>
-
-  <Constitutive>
-    <NullModel
-      name="nullModel"/>
-  </Constitutive>
-
-  <FieldSpecifications>
-    <!-- 1) The initial pressure field -->
-    <FieldSpecification
-      name="initialPressure"
-      initialCondition="1"
-      setNames="{ all }"
-      objectPath="nodeManager"
-      fieldName="pressure_n"
-      scale="0.0"/>
-
-    <FieldSpecification
-      name="initialPressure_nm1"
-      initialCondition="1"
-      setNames="{ all }"
-      objectPath="nodeManager"
-      fieldName="pressure_nm1"
-      scale="0.0"/>
-
-    <!-- 2) The velocity in the domain -->
-    <FieldSpecification
-      name="cellVelocity"
-      initialCondition="1"
-      objectPath="ElementRegions/Region/cb"
-      fieldName="mediumVelocity"
-      scale="1500"
-      setNames="{ all }"/>
-
-    <!-- 3) The free surface condition the domain -->
-    <FieldSpecification
-      name="zposFreeSurface"
-      objectPath="faceManager"
-      fieldName="FreeSurface"
-      scale="0.0"
-      setNames="{ zpos }"/>
-  </FieldSpecifications>
-
-  <!-- collect the pressure values at the nodes -->
-  <Tasks>
-    <PackCollection
-      name="pressureCollection"
-      objectPath="nodeManager"
-      fieldName="pressure_np1"/>
-  </Tasks>
-
-  <Outputs>
-    <!-- output all the mesh values registered with a plot level LEVEL_0, LEVEL_1, LEVEL_2, LEVEL_3   -->
-    <VTK
-      name="vtkOutput"
-      plotLevel="3"/>
-
-    <!-- output the pressure values to a file named pressure_history.hdf5  -->
-    <TimeHistory
-      name="timeHistoryOutput"
-      sources="{ /Tasks/pressureCollection }"
-      filename="pressure_history"/>
-  </Outputs>
-</Problem>
diff --git a/integratedTests b/integratedTests
--- a/integratedTests
+++ b/integratedTests
@@ -1 +1 @@
-Subproject commit f736882378b36d240fab6bdef81abf407a31daa0
+Subproject commit f736882378b36d240fab6bdef81abf407a31daa0-dirty
diff --git a/src/coreComponents/schema/docs/Solvers.rst b/src/coreComponents/schema/docs/Solvers.rst
index ec37140fd..74baad654 100644
--- a/src/coreComponents/schema/docs/Solvers.rst
+++ b/src/coreComponents/schema/docs/Solvers.rst
@@ -9,6 +9,7 @@ CompositionalMultiphaseFVM                node                 :ref:`XML_Composi
 CompositionalMultiphaseHybridFVM          node                 :ref:`XML_CompositionalMultiphaseHybridFVM`          
 CompositionalMultiphaseReservoir          node                 :ref:`XML_CompositionalMultiphaseReservoir`          
 CompositionalMultiphaseWell               node                 :ref:`XML_CompositionalMultiphaseWell`               
+ElasticSEM                                node                 :ref:`XML_ElasticSEM`                                
 EmbeddedSurfaceGenerator                  node                 :ref:`XML_EmbeddedSurfaceGenerator`                  
 FlowProppantTransport                     node                 :ref:`XML_FlowProppantTransport`                     
 Hydrofracture                             node                 :ref:`XML_Hydrofracture`                             
diff --git a/src/coreComponents/schema/docs/Solvers_other.rst b/src/coreComponents/schema/docs/Solvers_other.rst
index e7ee91988..a55d0297a 100644
--- a/src/coreComponents/schema/docs/Solvers_other.rst
+++ b/src/coreComponents/schema/docs/Solvers_other.rst
@@ -8,6 +8,7 @@ CompositionalMultiphaseFVM                node :ref:`DATASTRUCTURE_Compositional
 CompositionalMultiphaseHybridFVM          node :ref:`DATASTRUCTURE_CompositionalMultiphaseHybridFVM`          
 CompositionalMultiphaseReservoir          node :ref:`DATASTRUCTURE_CompositionalMultiphaseReservoir`          
 CompositionalMultiphaseWell               node :ref:`DATASTRUCTURE_CompositionalMultiphaseWell`               
+ElasticSEM                                node :ref:`DATASTRUCTURE_ElasticSEM`                                
 EmbeddedSurfaceGenerator                  node :ref:`DATASTRUCTURE_EmbeddedSurfaceGenerator`                  
 FlowProppantTransport                     node :ref:`DATASTRUCTURE_FlowProppantTransport`                     
 Hydrofracture                             node :ref:`DATASTRUCTURE_Hydrofracture`                             
diff --git a/src/coreComponents/schema/schema.xsd b/src/coreComponents/schema/schema.xsd
index b8fed0acf..67ef94989 100644
--- a/src/coreComponents/schema/schema.xsd
+++ b/src/coreComponents/schema/schema.xsd
@@ -305,6 +305,10 @@
 					<xsd:selector xpath="CompositionalMultiphaseWell" />
 					<xsd:field xpath="@name" />
 				</xsd:unique>
+				<xsd:unique name="SolversElasticSEMUniqueName">
+					<xsd:selector xpath="ElasticSEM" />
+					<xsd:field xpath="@name" />
+				</xsd:unique>
 				<xsd:unique name="SolversEmbeddedSurfaceGeneratorUniqueName">
 					<xsd:selector xpath="EmbeddedSurfaceGenerator" />
 					<xsd:field xpath="@name" />
@@ -1718,6 +1722,7 @@ the relative residual norm satisfies:
 					<xsd:field xpath="@name" />
 				</xsd:unique>
 			</xsd:element>
+			<xsd:element name="ElasticSEM" type="ElasticSEMType" />
 			<xsd:element name="EmbeddedSurfaceGenerator" type="EmbeddedSurfaceGeneratorType" />
 			<xsd:element name="FlowProppantTransport" type="FlowProppantTransportType" />
 			<xsd:element name="Hydrofracture" type="HydrofractureType" />
@@ -1944,6 +1949,36 @@ Equal to 1 for surface conditions, and to 0 for reservoir conditions-->
 			<xsd:pattern value=".*[\[\]`$].*|producer|injector" />
 		</xsd:restriction>
 	</xsd:simpleType>
+	<xsd:complexType name="ElasticSEMType">
+		<xsd:choice minOccurs="0" maxOccurs="unbounded">
+			<xsd:element name="LinearSolverParameters" type="LinearSolverParametersType" maxOccurs="1" />
+			<xsd:element name="NonlinearSolverParameters" type="NonlinearSolverParametersType" maxOccurs="1" />
+		</xsd:choice>
+		<!--cflFactor => Factor to apply to the `CFL condition <http://en.wikipedia.org/wiki/Courant-Friedrichs-Lewy_condition>`_ when calculating the maximum allowable time step. Values should be in the interval (0,1] -->
+		<xsd:attribute name="cflFactor" type="real64" default="0.5" />
+		<!--discretization => Name of discretization object (defined in the :ref:`NumericalMethodsManager`) to use for this solver. For instance, if this is a Finite Element Solver, the name of a :ref:`FiniteElement` should be specified. If this is a Finite Volume Method, the name of a :ref:`FiniteVolume` discretization should be specified.-->
+		<xsd:attribute name="discretization" type="string" use="required" />
+		<!--dtSeismoTrace => Time step for output pressure at receivers-->
+		<xsd:attribute name="dtSeismoTrace" type="real64" default="0" />
+		<!--initialDt => Initial time-step value required by the solver to the event manager.-->
+		<xsd:attribute name="initialDt" type="real64" default="1e+99" />
+		<!--logLevel => Log level-->
+		<xsd:attribute name="logLevel" type="integer" default="0" />
+		<!--outputSeismoTrace => Flag that indicates if we write the seismo trace in a file .txt, 0 no output, 1 otherwise-->
+		<xsd:attribute name="outputSeismoTrace" type="integer" default="0" />
+		<!--receiverCoordinates => Coordinates (x,y,z) of the receivers-->
+		<xsd:attribute name="receiverCoordinates" type="real64_array2d" use="required" />
+		<!--rickerOrder => Flag that indicates the order of the Ricker to be used o, 1 or 2. Order 2 by default-->
+		<xsd:attribute name="rickerOrder" type="integer" default="2" />
+		<!--sourceCoordinates => Coordinates (x,y,z) of the sources-->
+		<xsd:attribute name="sourceCoordinates" type="real64_array2d" use="required" />
+		<!--targetRegions => Allowable regions that the solver may be applied to. Note that this does not indicate that the solver will be applied to these regions, only that allocation will occur such that the solver may be applied to these regions. The decision about what regions this solver will beapplied to rests in the EventManager.-->
+		<xsd:attribute name="targetRegions" type="string_array" use="required" />
+		<!--timeSourceFrequency => Central frequency for the time source-->
+		<xsd:attribute name="timeSourceFrequency" type="real64" use="required" />
+		<!--name => A name is required for any non-unique nodes-->
+		<xsd:attribute name="name" type="string" use="required" />
+	</xsd:complexType>
 	<xsd:complexType name="EmbeddedSurfaceGeneratorType">
 		<xsd:choice minOccurs="0" maxOccurs="unbounded">
 			<xsd:element name="LinearSolverParameters" type="LinearSolverParametersType" maxOccurs="1" />
diff --git a/src/coreComponents/schema/schema.xsd.other b/src/coreComponents/schema/schema.xsd.other
index 426d4f4fd..8564ba8c1 100644
--- a/src/coreComponents/schema/schema.xsd.other
+++ b/src/coreComponents/schema/schema.xsd.other
@@ -455,6 +455,7 @@
 			<xsd:element name="CompositionalMultiphaseHybridFVM" type="CompositionalMultiphaseHybridFVMType" />
 			<xsd:element name="CompositionalMultiphaseReservoir" type="CompositionalMultiphaseReservoirType" />
 			<xsd:element name="CompositionalMultiphaseWell" type="CompositionalMultiphaseWellType" />
+			<xsd:element name="ElasticSEM" type="ElasticSEMType" />
 			<xsd:element name="EmbeddedSurfaceGenerator" type="EmbeddedSurfaceGeneratorType" />
 			<xsd:element name="FlowProppantTransport" type="FlowProppantTransportType" />
 			<xsd:element name="Hydrofracture" type="HydrofractureType" />
@@ -585,6 +586,39 @@
 			<xsd:pattern value=".*[\[\]`$].*|BHP|phaseVolRate|totalVolRate|uninitialized" />
 		</xsd:restriction>
 	</xsd:simpleType>
+	<xsd:complexType name="ElasticSEMType">
+		<xsd:choice minOccurs="0" maxOccurs="unbounded">
+			<xsd:element name="LinearSolverParameters" type="LinearSolverParametersType" maxOccurs="1" />
+			<xsd:element name="NonlinearSolverParameters" type="NonlinearSolverParametersType" maxOccurs="1" />
+			<xsd:element name="SolverStatistics" type="SolverStatisticsType" />
+		</xsd:choice>
+		<!--displacementxNp1AtReceivers => Displacement value at each receiver for each timestep (x-component)-->
+		<xsd:attribute name="displacementxNp1AtReceivers" type="real64_array2d" />
+		<!--displacementyNp1AtReceivers => Displacement value at each receiver for each timestep (y-component)-->
+		<xsd:attribute name="displacementyNp1AtReceivers" type="real64_array2d" />
+		<!--displacementzNp1AtReceivers => Displacement value at each receiver for each timestep (z-component)-->
+		<xsd:attribute name="displacementzNp1AtReceivers" type="real64_array2d" />
+		<!--indexSeismoTrace => Count for output pressure at receivers-->
+		<xsd:attribute name="indexSeismoTrace" type="integer" />
+		<!--maxStableDt => Value of the Maximum Stable Timestep for this solver.-->
+		<xsd:attribute name="maxStableDt" type="real64" />
+		<!--meshTargets => MeshBody/Region combinations that the solver will be applied to.-->
+		<xsd:attribute name="meshTargets" type="geosx_mapBase&lt;std_pair&lt;string, string&gt;, LvArray_Array&lt;string, 1, camp_int_seq&lt;long, 0l&gt;, int, LvArray_ChaiBuffer&gt;, std_integral_constant&lt;bool, true&gt; &gt;" />
+		<!--receiverIsLocal => Flag that indicates whether the receiver is local to this MPI rank-->
+		<xsd:attribute name="receiverIsLocal" type="integer_array" />
+		<!--receiverNodeIds => Indices of the nodes (in the right order) for each receiver point-->
+		<xsd:attribute name="receiverNodeIds" type="integer_array2d" />
+		<!--sourceConstants => Constant part of the receiver for the nodes listed in m_receiverNodeIds-->
+		<xsd:attribute name="sourceConstants" type="real64_array2d" />
+		<!--sourceIsLocal => Flag that indicates whether the source is local to this MPI rank-->
+		<xsd:attribute name="sourceIsLocal" type="integer_array" />
+		<!--sourceNodeIds => Indices of the nodes (in the right order) for each source point-->
+		<xsd:attribute name="sourceNodeIds" type="integer_array2d" />
+		<!--sourceValue => Source Value of the sources-->
+		<xsd:attribute name="sourceValue" type="real64_array2d" />
+		<!--usePML => Flag to apply PML-->
+		<xsd:attribute name="usePML" type="integer" />
+	</xsd:complexType>
 	<xsd:complexType name="EmbeddedSurfaceGeneratorType">
 		<xsd:choice minOccurs="0" maxOccurs="unbounded">
 			<xsd:element name="LinearSolverParameters" type="LinearSolverParametersType" maxOccurs="1" />
diff --git a/src/docs/sphinx/CompleteXMLSchema.rst b/src/docs/sphinx/CompleteXMLSchema.rst
index 52e81d5c8..7f4fa57a5 100644
--- a/src/docs/sphinx/CompleteXMLSchema.rst
+++ b/src/docs/sphinx/CompleteXMLSchema.rst
@@ -316,6 +316,13 @@ Element: ElasticOrthotropic
 .. include:: ../../coreComponents/schema/docs/ElasticOrthotropic.rst
 
 
+.. _XML_ElasticSEM:
+
+Element: ElasticSEM
+===================
+.. include:: ../../coreComponents/schema/docs/ElasticSEM.rst
+
+
 .. _XML_ElasticTransverseIsotropic:
 
 Element: ElasticTransverseIsotropic
@@ -1405,6 +1412,13 @@ Datastructure: ElasticOrthotropic
 .. include:: ../../coreComponents/schema/docs/ElasticOrthotropic_other.rst
 
 
+.. _DATASTRUCTURE_ElasticSEM:
+
+Datastructure: ElasticSEM
+=========================
+.. include:: ../../coreComponents/schema/docs/ElasticSEM_other.rst
+
+
 .. _DATASTRUCTURE_ElasticTransverseIsotropic:
 
 Datastructure: ElasticTransverseIsotropic
